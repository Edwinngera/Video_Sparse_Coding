function [OutClass] = final_classify(I,V,H,H_label,B_LLC,Coeff,database)
NumTrials = 1;
gridSpacing = 6;
patchSize = 16;
maxImSize = 300;
nrml_threshold = 1;

pyramid = [1 2 4];  % Levels in SPM
gamma = 0.15;
knn = 20;
lambda = 0.1;

[feaTest] = ExtractSIFT(I, gridSpacing, patchSize, maxImSize, nrml_threshold);
H_test = SPM_max_pooling(feaTest, V, pyramid, gamma);

tradeoff = 0.55;

[N_test, L_test] = exact_alm_rpca(H_test, tradeoff);
Coeff_test = LLC_coding_appr(B_LLC',H_test',900);
Coeff_test = Coeff_test';

%% Classification using linear SVM
fprintf('Classification...\n')
[dimFea, nFea] = size(Coeff);
clabel = unique(H_label);
accuracy = zeros(NumTrials, 1);
NumTrials = 1;

fprintf('Trial: ');
    %     TestIdx = [];
    
    for iter2 = 1:18,
        idx_label = find(H_label == clabel(iter2));
        num = length(idx_label);
        RandIdx = randperm(num);
        
%         TrainIdx = [TrainIdx; idx_label(RandIdx(1:NumTrain))];
        %         TestIdx = [TestIdx; idx_label(RandIdx(NumTrain+1:end))];
    end;
    
    TrainFeat = Coeff;
    TrainLabel = H_label;
    TestFeat = Coeff_test;
    
    %     TestFeat = Coeff(:, TestIdx);
    %     TestLabel = H_label(TestIdx);
    
    [w, b, class_name] = li2nsvm_multiclass_lbfgs(TrainFeat', TrainLabel', lambda);
    
    [C, Y] = li2nsvm_multiclass_fwd(TestFeat', w, b, class_name);
    
    %     acc = zeros(length(class_name), 1);
    %
    %     for iter2 = 1 : length(class_name),
    %         c = class_name(iter2);
    %         idx = find(TestLabel == c);
    %         curr_pred_label = C(idx);
    %         curr_gnd_label = TestLabel(idx);
    %         acc(iter2) = length(find(curr_pred_label == curr_gnd_label))/length(idx);
    %     end;
    OutClass = C;
    %     accuracy(iter1) = mean(acc);
end;

% fprintf('Mean accuracy: %f\n', mean(accuracy));
% fprintf('Standard deviation: %f\n', std(accuracy));
fprintf('\n')
disp(database.cname{C});

end
